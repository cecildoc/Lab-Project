package javalabproject;

import java.util.*;





public class TicTacToe {
        public static int row, col;
        public static Scanner input = new Scanner(System.in);
        public static char[][] board = new char [3][3];
        public static char turn = '1';
        
        public static void main(String[] args){
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    board[i][j] = '_';
                    
                }
                    
             }
                Turn();
            }
                
        

        
        
        public static void Turn(){
            boolean finished = false;
            GameBoard();
            System.out.println("Player one please input row and col: ");
            int counter = 0;
            while (finished == false){
                if(counter > 0)
                    System.out.println("Next player please input row and col: ");
                
                row = input.nextInt() - 1;
                col = input.nextInt() - 1;
                if(board[row][col] != '_'){
                System.out.println("The place is already occupied. Please try again!");
                continue;
            }
                board[row][col] = turn;
                if(GameFinish(row , col)){
                    finished = true;
                    System.out.println("Game OVER!!! Player " + turn + " WINS !!!");
                }
                
                GameBoard();
                
                if(turn == '1')
                    turn = '2';
                else
                    turn = '1';
                counter = counter + 1;          
            }
        }
        
        public static void GameBoard(){
            for (int i = 0; i < 3; i++){
                System.out.println();
                System.out.print(" | ");
                for (int j = 0; j < 3; j++){
                    System.out.print(board[i][j] + " | ");
                }
            }
            System.out.println();
        }   
        
        
        public static boolean GameFinish(int RMove , int CMove){
            //Checking collumns and rows victory conditions
            if(board[0][CMove] == board[1][CMove]
                && board[0][CMove] == board[2][CMove])
                        return true;
            if (board[RMove][0] == board[RMove][1]
                && board[RMove][0] == board[RMove][2])
                        return true;
            //Checking diagonal victory conditions
            if (board[0][0] == board[1][1]
                && board[0][0] == board[2][2] && board[0][0] !=  '_')
                        return true;
            if (board[0][2] == board[1][1]
                && board[0][2] == board[2][0] && board[0][2] !=  '_')
                        return true;
            return false;
        }
    }
    
